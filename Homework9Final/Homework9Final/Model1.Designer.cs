//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Model", "ClientID", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Homework9Final.Client), "Client_Vehicle_Line", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Homework9Final.Client_Vehicle_Line), true)]
[assembly: EdmRelationshipAttribute("Model", "ClientType_ID", "ClientType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Homework9Final.ClientType), "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Homework9Final.Client), true)]
[assembly: EdmRelationshipAttribute("Model", "VehicleID", "Vehicle", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Homework9Final.Vehicle), "Client_Vehicle_Line", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Homework9Final.Client_Vehicle_Line), true)]
[assembly: EdmRelationshipAttribute("Model", "VehicleType_ID", "VehicleType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Homework9Final.VehicleType), "Vehicle", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Homework9Final.Vehicle), true)]

#endregion

namespace Homework9Final
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Mini_ProjectEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Mini_ProjectEntities object using the connection string found in the 'Mini_ProjectEntities' section of the application configuration file.
        /// </summary>
        public Mini_ProjectEntities() : base("name=Mini_ProjectEntities", "Mini_ProjectEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Mini_ProjectEntities object.
        /// </summary>
        public Mini_ProjectEntities(string connectionString) : base(connectionString, "Mini_ProjectEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Mini_ProjectEntities object.
        /// </summary>
        public Mini_ProjectEntities(EntityConnection connection) : base(connection, "Mini_ProjectEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Client> Clients
        {
            get
            {
                if ((_Clients == null))
                {
                    _Clients = base.CreateObjectSet<Client>("Clients");
                }
                return _Clients;
            }
        }
        private ObjectSet<Client> _Clients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Client_Vehicle_Line> Client_Vehicle_Line
        {
            get
            {
                if ((_Client_Vehicle_Line == null))
                {
                    _Client_Vehicle_Line = base.CreateObjectSet<Client_Vehicle_Line>("Client_Vehicle_Line");
                }
                return _Client_Vehicle_Line;
            }
        }
        private ObjectSet<Client_Vehicle_Line> _Client_Vehicle_Line;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClientType> ClientTypes
        {
            get
            {
                if ((_ClientTypes == null))
                {
                    _ClientTypes = base.CreateObjectSet<ClientType>("ClientTypes");
                }
                return _ClientTypes;
            }
        }
        private ObjectSet<ClientType> _ClientTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Vehicle> Vehicles
        {
            get
            {
                if ((_Vehicles == null))
                {
                    _Vehicles = base.CreateObjectSet<Vehicle>("Vehicles");
                }
                return _Vehicles;
            }
        }
        private ObjectSet<Vehicle> _Vehicles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VehicleType> VehicleTypes
        {
            get
            {
                if ((_VehicleTypes == null))
                {
                    _VehicleTypes = base.CreateObjectSet<VehicleType>("VehicleTypes");
                }
                return _VehicleTypes;
            }
        }
        private ObjectSet<VehicleType> _VehicleTypes;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Clients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClients(Client client)
        {
            base.AddObject("Clients", client);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Client_Vehicle_Line EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClient_Vehicle_Line(Client_Vehicle_Line client_Vehicle_Line)
        {
            base.AddObject("Client_Vehicle_Line", client_Vehicle_Line);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClientTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClientTypes(ClientType clientType)
        {
            base.AddObject("ClientTypes", clientType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Vehicles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVehicles(Vehicle vehicle)
        {
            base.AddObject("Vehicles", vehicle);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VehicleTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVehicleTypes(VehicleType vehicleType)
        {
            base.AddObject("VehicleTypes", vehicleType);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Client")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Client : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Client object.
        /// </summary>
        /// <param name="clientID">Initial value of the ClientID property.</param>
        public static Client CreateClient(global::System.Int32 clientID)
        {
            Client client = new Client();
            client.ClientID = clientID;
            return client;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                if (_ClientID != value)
                {
                    OnClientIDChanging(value);
                    ReportPropertyChanging("ClientID");
                    _ClientID = StructuralObject.SetValidValue(value, "ClientID");
                    ReportPropertyChanged("ClientID");
                    OnClientIDChanged();
                }
            }
        }
        private global::System.Int32 _ClientID;
        partial void OnClientIDChanging(global::System.Int32 value);
        partial void OnClientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClientName
        {
            get
            {
                return _ClientName;
            }
            set
            {
                OnClientNameChanging(value);
                ReportPropertyChanging("ClientName");
                _ClientName = StructuralObject.SetValidValue(value, true, "ClientName");
                ReportPropertyChanged("ClientName");
                OnClientNameChanged();
            }
        }
        private global::System.String _ClientName;
        partial void OnClientNameChanging(global::System.String value);
        partial void OnClientNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClientEmail
        {
            get
            {
                return _ClientEmail;
            }
            set
            {
                OnClientEmailChanging(value);
                ReportPropertyChanging("ClientEmail");
                _ClientEmail = StructuralObject.SetValidValue(value, true, "ClientEmail");
                ReportPropertyChanged("ClientEmail");
                OnClientEmailChanged();
            }
        }
        private global::System.String _ClientEmail;
        partial void OnClientEmailChanging(global::System.String value);
        partial void OnClientEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClientContactNumber
        {
            get
            {
                return _ClientContactNumber;
            }
            set
            {
                OnClientContactNumberChanging(value);
                ReportPropertyChanging("ClientContactNumber");
                _ClientContactNumber = StructuralObject.SetValidValue(value, true, "ClientContactNumber");
                ReportPropertyChanged("ClientContactNumber");
                OnClientContactNumberChanged();
            }
        }
        private global::System.String _ClientContactNumber;
        partial void OnClientContactNumberChanging(global::System.String value);
        partial void OnClientContactNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientTypeID
        {
            get
            {
                return _ClientTypeID;
            }
            set
            {
                OnClientTypeIDChanging(value);
                ReportPropertyChanging("ClientTypeID");
                _ClientTypeID = StructuralObject.SetValidValue(value, "ClientTypeID");
                ReportPropertyChanged("ClientTypeID");
                OnClientTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientTypeID;
        partial void OnClientTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnClientTypeIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "ClientID", "Client_Vehicle_Line")]
        public EntityCollection<Client_Vehicle_Line> Client_Vehicle_Line
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Client_Vehicle_Line>("Model.ClientID", "Client_Vehicle_Line");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Client_Vehicle_Line>("Model.ClientID", "Client_Vehicle_Line", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "ClientType_ID", "ClientType")]
        public ClientType ClientType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientType>("Model.ClientType_ID", "ClientType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientType>("Model.ClientType_ID", "ClientType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ClientType> ClientTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientType>("Model.ClientType_ID", "ClientType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ClientType>("Model.ClientType_ID", "ClientType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Client_Vehicle_Line")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Client_Vehicle_Line : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Client_Vehicle_Line object.
        /// </summary>
        /// <param name="line_ID">Initial value of the Line_ID property.</param>
        /// <param name="client_Vehicle_Booking">Initial value of the Client_Vehicle_Booking property.</param>
        public static Client_Vehicle_Line CreateClient_Vehicle_Line(global::System.Int32 line_ID, global::System.DateTime client_Vehicle_Booking)
        {
            Client_Vehicle_Line client_Vehicle_Line = new Client_Vehicle_Line();
            client_Vehicle_Line.Line_ID = line_ID;
            client_Vehicle_Line.Client_Vehicle_Booking = client_Vehicle_Booking;
            return client_Vehicle_Line;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Line_ID
        {
            get
            {
                return _Line_ID;
            }
            set
            {
                if (_Line_ID != value)
                {
                    OnLine_IDChanging(value);
                    ReportPropertyChanging("Line_ID");
                    _Line_ID = StructuralObject.SetValidValue(value, "Line_ID");
                    ReportPropertyChanged("Line_ID");
                    OnLine_IDChanged();
                }
            }
        }
        private global::System.Int32 _Line_ID;
        partial void OnLine_IDChanging(global::System.Int32 value);
        partial void OnLine_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Client_Vehicle_Booking
        {
            get
            {
                return _Client_Vehicle_Booking;
            }
            set
            {
                OnClient_Vehicle_BookingChanging(value);
                ReportPropertyChanging("Client_Vehicle_Booking");
                _Client_Vehicle_Booking = StructuralObject.SetValidValue(value, "Client_Vehicle_Booking");
                ReportPropertyChanged("Client_Vehicle_Booking");
                OnClient_Vehicle_BookingChanged();
            }
        }
        private global::System.DateTime _Client_Vehicle_Booking;
        partial void OnClient_Vehicle_BookingChanging(global::System.DateTime value);
        partial void OnClient_Vehicle_BookingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value, "ClientID");
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientID;
        partial void OnClientIDChanging(Nullable<global::System.Int32> value);
        partial void OnClientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VehicleID
        {
            get
            {
                return _VehicleID;
            }
            set
            {
                OnVehicleIDChanging(value);
                ReportPropertyChanging("VehicleID");
                _VehicleID = StructuralObject.SetValidValue(value, "VehicleID");
                ReportPropertyChanged("VehicleID");
                OnVehicleIDChanged();
            }
        }
        private Nullable<global::System.Int32> _VehicleID;
        partial void OnVehicleIDChanging(Nullable<global::System.Int32> value);
        partial void OnVehicleIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "ClientID", "Client")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("Model.ClientID", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("Model.ClientID", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("Model.ClientID", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("Model.ClientID", "Client", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "VehicleID", "Vehicle")]
        public Vehicle Vehicle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vehicle>("Model.VehicleID", "Vehicle").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vehicle>("Model.VehicleID", "Vehicle").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Vehicle> VehicleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vehicle>("Model.VehicleID", "Vehicle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Vehicle>("Model.VehicleID", "Vehicle", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="ClientType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClientType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClientType object.
        /// </summary>
        /// <param name="clientTypeID">Initial value of the ClientTypeID property.</param>
        public static ClientType CreateClientType(global::System.Int32 clientTypeID)
        {
            ClientType clientType = new ClientType();
            clientType.ClientTypeID = clientTypeID;
            return clientType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientTypeID
        {
            get
            {
                return _ClientTypeID;
            }
            set
            {
                if (_ClientTypeID != value)
                {
                    OnClientTypeIDChanging(value);
                    ReportPropertyChanging("ClientTypeID");
                    _ClientTypeID = StructuralObject.SetValidValue(value, "ClientTypeID");
                    ReportPropertyChanged("ClientTypeID");
                    OnClientTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _ClientTypeID;
        partial void OnClientTypeIDChanging(global::System.Int32 value);
        partial void OnClientTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClientTypeName
        {
            get
            {
                return _ClientTypeName;
            }
            set
            {
                OnClientTypeNameChanging(value);
                ReportPropertyChanging("ClientTypeName");
                _ClientTypeName = StructuralObject.SetValidValue(value, true, "ClientTypeName");
                ReportPropertyChanged("ClientTypeName");
                OnClientTypeNameChanged();
            }
        }
        private global::System.String _ClientTypeName;
        partial void OnClientTypeNameChanging(global::System.String value);
        partial void OnClientTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClientTypeDescription
        {
            get
            {
                return _ClientTypeDescription;
            }
            set
            {
                OnClientTypeDescriptionChanging(value);
                ReportPropertyChanging("ClientTypeDescription");
                _ClientTypeDescription = StructuralObject.SetValidValue(value, true, "ClientTypeDescription");
                ReportPropertyChanged("ClientTypeDescription");
                OnClientTypeDescriptionChanged();
            }
        }
        private global::System.String _ClientTypeDescription;
        partial void OnClientTypeDescriptionChanging(global::System.String value);
        partial void OnClientTypeDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "ClientType_ID", "Client")]
        public EntityCollection<Client> Clients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Client>("Model.ClientType_ID", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Client>("Model.ClientType_ID", "Client", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value, "principal_id");
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value, "diagram_id");
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value, "version");
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true, "definition");
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Vehicle")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Vehicle : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Vehicle object.
        /// </summary>
        /// <param name="vehicleID">Initial value of the VehicleID property.</param>
        /// <param name="vehicleTypeID">Initial value of the VehicleTypeID property.</param>
        public static Vehicle CreateVehicle(global::System.Int32 vehicleID, global::System.Int32 vehicleTypeID)
        {
            Vehicle vehicle = new Vehicle();
            vehicle.VehicleID = vehicleID;
            vehicle.VehicleTypeID = vehicleTypeID;
            return vehicle;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VehicleID
        {
            get
            {
                return _VehicleID;
            }
            set
            {
                if (_VehicleID != value)
                {
                    OnVehicleIDChanging(value);
                    ReportPropertyChanging("VehicleID");
                    _VehicleID = StructuralObject.SetValidValue(value, "VehicleID");
                    ReportPropertyChanged("VehicleID");
                    OnVehicleIDChanged();
                }
            }
        }
        private global::System.Int32 _VehicleID;
        partial void OnVehicleIDChanging(global::System.Int32 value);
        partial void OnVehicleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VehicleName
        {
            get
            {
                return _VehicleName;
            }
            set
            {
                OnVehicleNameChanging(value);
                ReportPropertyChanging("VehicleName");
                _VehicleName = StructuralObject.SetValidValue(value, true, "VehicleName");
                ReportPropertyChanged("VehicleName");
                OnVehicleNameChanged();
            }
        }
        private global::System.String _VehicleName;
        partial void OnVehicleNameChanging(global::System.String value);
        partial void OnVehicleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VehicleDescription
        {
            get
            {
                return _VehicleDescription;
            }
            set
            {
                OnVehicleDescriptionChanging(value);
                ReportPropertyChanging("VehicleDescription");
                _VehicleDescription = StructuralObject.SetValidValue(value, true, "VehicleDescription");
                ReportPropertyChanged("VehicleDescription");
                OnVehicleDescriptionChanged();
            }
        }
        private global::System.String _VehicleDescription;
        partial void OnVehicleDescriptionChanging(global::System.String value);
        partial void OnVehicleDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VehicleTypeID
        {
            get
            {
                return _VehicleTypeID;
            }
            set
            {
                OnVehicleTypeIDChanging(value);
                ReportPropertyChanging("VehicleTypeID");
                _VehicleTypeID = StructuralObject.SetValidValue(value, "VehicleTypeID");
                ReportPropertyChanged("VehicleTypeID");
                OnVehicleTypeIDChanged();
            }
        }
        private global::System.Int32 _VehicleTypeID;
        partial void OnVehicleTypeIDChanging(global::System.Int32 value);
        partial void OnVehicleTypeIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "VehicleID", "Client_Vehicle_Line")]
        public EntityCollection<Client_Vehicle_Line> Client_Vehicle_Line
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Client_Vehicle_Line>("Model.VehicleID", "Client_Vehicle_Line");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Client_Vehicle_Line>("Model.VehicleID", "Client_Vehicle_Line", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "VehicleType_ID", "VehicleType")]
        public VehicleType VehicleType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VehicleType>("Model.VehicleType_ID", "VehicleType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VehicleType>("Model.VehicleType_ID", "VehicleType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VehicleType> VehicleTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VehicleType>("Model.VehicleType_ID", "VehicleType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VehicleType>("Model.VehicleType_ID", "VehicleType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="VehicleType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VehicleType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VehicleType object.
        /// </summary>
        /// <param name="vehicleTypeID">Initial value of the VehicleTypeID property.</param>
        public static VehicleType CreateVehicleType(global::System.Int32 vehicleTypeID)
        {
            VehicleType vehicleType = new VehicleType();
            vehicleType.VehicleTypeID = vehicleTypeID;
            return vehicleType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VehicleTypeID
        {
            get
            {
                return _VehicleTypeID;
            }
            set
            {
                if (_VehicleTypeID != value)
                {
                    OnVehicleTypeIDChanging(value);
                    ReportPropertyChanging("VehicleTypeID");
                    _VehicleTypeID = StructuralObject.SetValidValue(value, "VehicleTypeID");
                    ReportPropertyChanged("VehicleTypeID");
                    OnVehicleTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _VehicleTypeID;
        partial void OnVehicleTypeIDChanging(global::System.Int32 value);
        partial void OnVehicleTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VehicleTypeName
        {
            get
            {
                return _VehicleTypeName;
            }
            set
            {
                OnVehicleTypeNameChanging(value);
                ReportPropertyChanging("VehicleTypeName");
                _VehicleTypeName = StructuralObject.SetValidValue(value, true, "VehicleTypeName");
                ReportPropertyChanged("VehicleTypeName");
                OnVehicleTypeNameChanged();
            }
        }
        private global::System.String _VehicleTypeName;
        partial void OnVehicleTypeNameChanging(global::System.String value);
        partial void OnVehicleTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VehicleTypeDescription
        {
            get
            {
                return _VehicleTypeDescription;
            }
            set
            {
                OnVehicleTypeDescriptionChanging(value);
                ReportPropertyChanging("VehicleTypeDescription");
                _VehicleTypeDescription = StructuralObject.SetValidValue(value, true, "VehicleTypeDescription");
                ReportPropertyChanged("VehicleTypeDescription");
                OnVehicleTypeDescriptionChanged();
            }
        }
        private global::System.String _VehicleTypeDescription;
        partial void OnVehicleTypeDescriptionChanging(global::System.String value);
        partial void OnVehicleTypeDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "VehicleType_ID", "Vehicle")]
        public EntityCollection<Vehicle> Vehicles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Vehicle>("Model.VehicleType_ID", "Vehicle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Vehicle>("Model.VehicleType_ID", "Vehicle", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
